ifeq ($(platform),win32)
   MEM:=mem_win.o
   BLASTEM:=blastem_libretro.dll
   CC:=gcc
   CFLAGS:=-O2 -std=gnu99 -Wreturn-type -Werror=return-type -Werror=implicit-function-declaration 
   LDFLAGS:= -lopengl32 -lglu32 -mwindows
   CPU:=i686
else
   MEM:=mem.o
   BLASTEM:=blastem_libretro.so
   CFLAGS:=-fPIC -std=gnu99 -Wreturn-type -Werror=return-type -Werror=implicit-function-declaration -Wno-unused-value -Wno-logical-op-parentheses
   LDFLAGS:=-shared -fPIC -lm
   FIXUP:=
endif #Windows

ifeq ($(DEBUG),1)
   CFLAGS  := -ggdb -Wall $(CFLAGS)
   LDFLAGS := -ggdb $(LDFLAGS)
else
   CFLAGS   := -O2 $(CFLAGS)
   LDFLAGS  := -O2 $(LDFLAGS)
endif #DEBUG

ifneq ($(SANITIZER),)
    CFLAGS   := -fsanitize=$(SANITIZER) $(CFLAGS)
    CXXFLAGS := -fsanitize=$(SANITIZER) $(CXXFLAGS)
    LDFLAGS  := -fsanitize=$(SANITIZER) $(LDLAGS)
endif

ifdef Z80_LOG_ADDRESS
   CFLAGS+= -DZ80_LOG_ADDRESS
endif

ifdef PROFILE
   CFLAGS+= -pg
   LDFLAGS+= -pg
endif

ifdef NOGL
   CFLAGS+= -DDISABLE_OPENGL
endif

ifdef M68030
   CFLAGS+= -DM68030
endif

ifdef M68020
   CFLAGS+= -DM68020
endif

ifdef M68010
   CFLAGS+= -DM68010
endif

ifndef CPU
   CPU:=$(shell uname -m)
endif

TRANSOBJS=gen.o backend.o $(MEM)
M68KOBJS=68kinst.o m68k_core.o

ifeq ($(CPU),x86_64)
   M68KOBJS+= m68k_core_x86.o
   TRANSOBJS+= gen_x86.o backend_x86.o
else
   ifeq ($(CPU),i686)
      M68KOBJS+= m68k_core_x86.o
      TRANSOBJS+= gen_x86.o backend_x86.o
   endif
endif

Z80OBJS=z80inst.o z80_to_x86.o
AUDIOOBJS=ym2612.o psg.o wave.o
CONFIGOBJS=config.o tern.o util.o glad/src/glad.o libco/libco.o

MAINOBJS=blastem.o debug.o gdb_remote.o vdp.o render_libretro.o io.o romdb.o $(CONFIGOBJS) gst.o $(M68KOBJS) $(TRANSOBJS) $(AUDIOOBJS)

ifeq ($(CPU),x86_64)
   CFLAGS+=-DX86_64 -m64
   LDFLAGS+=-m64
else
   ifeq ($(CPU),i686)
      CFLAGS+=-DX86_32 -m32
      LDFLAGS+=-m32
   endif
endif

ifdef NOZ80
   CFLAGS+=-DNO_Z80
else
   MAINOBJS+= $(Z80OBJS)
endif

CFLAGS  += -Iglad/include -Ilibco -I. -D__LIBRETRO__

all : $(BLASTEM)

$(BLASTEM) : $(MAINOBJS)
	$(CC) -o $(BLASTEM) $(MAINOBJS) $(LDFLAGS)
	$(FIXUP)

%.o : %.S
	$(CC) -c -o $@ $<

%.o : %.c
	$(CC) $(CFLAGS) -c -o $@ $<

%.bin : %.s68
	vasmm68k_mot -Fbin -m68000 -no-opt -spaces -o $@ -L $@.list $<

%.bin : %.sz8
	vasmz80_mot -Fbin -spaces -o $@ $<

clean :
	rm -rf $(MAINOBJS) $(BLASTEM)

